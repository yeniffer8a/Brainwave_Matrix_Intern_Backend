openapi: 3.0.0
info:
  title: Task Management API
  description: API for managing users and tasks, including CRUD operations and authentication.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local development server
  - url: https://technical-test-production-e516.up.railway.app/api
    description: Production server

paths:
  /token:
    post:
      summary: Login user and return a JWT token
      operationId: login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: JWT token issued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt_token_here"
        "400":
          description: Missing email or password
        "404":
          description: User not found
        "401":
          description: Invalid password

  /users:
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input data
        "409":
          description: User already exists

    get:
      summary: Get the logged-in user information
      operationId: getUser
      tags:
        - User
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: user@example.com
                      id:
                        type: string
                        example: "60d1234567890abcdef12345"
        "404":
          description: User not found

    patch:
      summary: Update the logged-in user's details
      operationId: updateUser
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: newuser@example.com
                password:
                  type: string
                  example: newpassword123
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid input data
        "404":
          description: User not found

    delete:
      summary: Delete the logged-in user
      operationId: deleteUser
      tags:
        - User
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found

  /tasks:
    post:
      summary: Create a new task
      operationId: createTask
      tags:
        - Task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Task Title"
                description:
                  type: string
                  example: "Task Description"
                completed:
                  type: boolean
                  example: false
      responses:
        "201":
          description: Task created successfully
        "400":
          description: Invalid input data

    get:
      summary: Get all tasks
      operationId: listTasks
      tags:
        - Task
      responses:
        "200":
          description: List of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                      example: "Task Title"
                    description:
                      type: string
                      example: "Task Description"
                    completed:
                      type: boolean
                      example: false

  /tasks/{id}:
    get:
      summary: Get a specific task by ID
      operationId: getOneTask
      tags:
        - Task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "60d1234567890abcdef12345"
      responses:
        "200":
          description: Task details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: "Task Title"
                  description:
                    type: string
                    example: "Task Description"
                  completed:
                    type: boolean
                    example: false
        "404":
          description: Task not found

    patch:
      summary: Update a specific task by ID
      operationId: updateTask
      tags:
        - Task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "60d1234567890abcdef12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated Task Title"
                description:
                  type: string
                  example: "Updated Task Description"
                completed:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Task updated successfully
        "400":
          description: Invalid input data
        "404":
          description: Task not found

    delete:
      summary: Delete a specific task by ID
      operationId: deleteOneTask
      tags:
        - Task
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "60d1234567890abcdef12345"
      responses:
        "200":
          description: Task deleted successfully
        "404":
          description: Task not found
